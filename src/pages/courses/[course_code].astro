---
import Layout from "@layouts/Layout.astro";
import {parse_curriculum_file_content} from "@utils/parser";
import type {Course} from "@models/types";
import fs from "node:fs";
import path from "node:path";
import Button from "@atoms/Button.astro";
import DetailSection from "@molecules/DetailSection.astro";
import CourseHeader from "@molecules/CourseHeader.astro";

export type Props = {
  course: Course;
};

export async function getStaticPaths() {
  const curriculum_file_path = path.resolve(process.cwd(), "curriculum.md");
  let courses_data: Course[] = [];
  try {
    const file_content = fs.readFileSync(curriculum_file_path, "utf-8");
    courses_data = parse_curriculum_file_content(file_content);
  } catch (e: unknown) {
    console.error(
      "Error fetching courses for static paths:",
      e instanceof Error ? e.message : String(e),
    );
    return [];
  }

  return courses_data.map((course_item: Course) => ({
    params: {course_code: course_item.course_code.toLowerCase()},
    props: {course: course_item},
  }));
}

const {course} = Astro.props;

const difficulty_border_colors: {[key: string]: string} = {
  Fundamental: "border-green-700",
  Beginner: "border-blue-700",
  Intermediate: "border-yellow-600",
  Advanced: "border-red-700",
  Unknown: "border-gray-800",
};
const border_color_class =
  difficulty_border_colors[course.difficulty] ||
  difficulty_border_colors["Unknown"];

const difficulty_text_colors: {[key: string]: string} = {
  Fundamental: "text-green-400",
  Beginner: "text-blue-400",
  Intermediate: "text-yellow-400",
  Advanced: "text-red-400",
  Unknown: "text-gray-400",
};
const text_color_class =
  difficulty_text_colors[course.difficulty] ||
  difficulty_text_colors["Unknown"];
---

<Layout title={`${course.course_code}: ${course.course_name} Details`}>
  <main
    class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12 text-white min-h-screen">
    <div class="mb-8">
      <Button
        href="/"
        text="Â« Back to All Courses"
        variant="link"
        extra_classes="text-sky-400 hover:text-sky-300 transition-colors duration-150 text-sm inline-flex items-center"
      />
    </div>
    <article
      class={`bg-gray-900 rounded-lg shadow-xl p-6 md:p-8 lg:p-10 border-t-8 ${border_color_class}`}>
      <CourseHeader
        course_name={course.course_name}
        course_code={course.course_code}
        semester={course.semester}
        difficulty={course.difficulty}
        text_color_class={text_color_class}
      />

      {
        course.description && (
          <section class="mt-8 prose prose-invert max-w-none prose-lg text-gray-300">
            <p>{course.description}</p>
          </section>
        )
      }

      <DetailSection
        title="What You'll Learn"
        items={course.topics_list || []}
        heading_level={2}
        extra_heading_classes="!text-2xl sm:!text-3xl font-bold text-gray-100 mt-10 mb-4 pb-2 border-b border-gray-700"
        extra_section_classes="mt-8"
        extra_list_classes="list-disc pl-5 space-y-1 text-gray-300 prose prose-invert max-w-none"
      />

      <DetailSection
        title="Technical Focus"
        items={course.programming_details || []}
        heading_level={2}
        extra_heading_classes="!text-2xl sm:!text-3xl font-bold text-gray-100 mt-10 mb-4 pb-2 border-b border-gray-700"
        extra_section_classes="mt-8"
        extra_list_classes="list-disc pl-5 space-y-1 text-gray-300 prose prose-invert max-w-none"
      />

      <DetailSection
        title="Further Reading & Resources"
        items={course.references_list || []}
        heading_level={2}
        extra_heading_classes="!text-2xl sm:!text-3xl font-bold text-gray-100 mt-10 mb-4 pb-2 border-b border-gray-700"
        extra_section_classes="mt-8"
        extra_list_classes="list-disc pl-5 space-y-1 text-gray-300 prose prose-invert max-w-none"
      />
    </article>
  </main>
</Layout>
