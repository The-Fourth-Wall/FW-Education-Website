---
import type {Course} from "../types";

// Update Props to include semester and difficulty, remove description
export interface Props {
  course_code: string;
  course_name: string;
  semester: number;
  difficulty: string;
  programming_language?: string;
  // description?: string; // Removed
  // Detailed lists are no longer props for the card itself
}

const {
  course_code,
  course_name,
  semester,
  difficulty,
  programming_language,
  // description // Removed
} = Astro.props;

// Updated Difficulty to Tailwind Border Color Mapping
const difficulty_colors: {[key: string]: string} = {
  Fundamental: "border-green-700 hover:border-green-600", // Changed to Green
  Beginner: "border-blue-700 hover:border-blue-600", // Changed to Blue
  Intermediate: "border-yellow-600 hover:border-yellow-500", // Changed to Yellow (using slightly lighter shades often default in Tailwind)
  Advanced: "border-red-700 hover:border-red-600", // Changed to Red
  Unknown: "border-gray-800 hover:border-gray-700", // Updated fallback border
};

const border_color_class =
  difficulty_colors[difficulty] || difficulty_colors["Unknown"];

const detail_page_url = `/courses/${course_code.toLowerCase()}`;
---

<a
  href={detail_page_url}
  class={`block bg-gray-900 rounded-lg shadow-lg p-4 mb-6 text-white hover:bg-gray-800 transition-all duration-150 ease-in-out border-l-4 ${border_color_class}`}>
  <div class="flex justify-between items-start mb-3">
    <h2 class="text-lg font-semibold text-blue-400 mr-2">{course_name}</h2>
    <span
      class="text-xs font-medium bg-gray-800 text-gray-300 px-2 py-0.5 rounded-md whitespace-nowrap"
      >{course_code}</span
    >
  </div>
  <div class="text-sm text-gray-300">
    <p class="mb-1">
      <span class="font-medium text-gray-400">Semester:</span>
      {semester}
    </p>
    <p class="mb-1">
      <span class="font-medium text-gray-400">Difficulty:</span>
      {difficulty}
    </p>
    {
      programming_language && (
        <p>
          <span class="font-medium text-gray-400">Language:</span>{" "}
          {programming_language}
        </p>
      )
    }
  </div>
</a>
