---
import Spacer from "@atoms/text/Spacer.astro";
import Text from "@atoms/text/Text.astro";
import type {Course} from "@models/course.model";
import CourseCard from "@molecules/CourseCard.astro";
import GridTitleAligner from "./GridTitleAligner.svelte";

type Props = {
  courses: Course[];
};

const {courses} = Astro.props;

const semesters = courses.reduce<Course[][]>((acc, course) => {
  const newest = acc[acc.length - 1];

  if (!newest || newest[0].semester !== course.semester) {
    acc.push([course]);
  } else {
    newest.push(course);
  }

  return acc;
}, []);
---

<GridTitleAligner client:load />
{
  semesters.map(semester_courses => (
    <div class="semester-group">
      <div class="semester-title">
        <Text
          label={`Semester ${semester_courses[0].semester}`}
          size={1.5625}
          type="primary"
          color="var(--fg-color)"
        />
        <Spacer size={1} />
        <div class="separator" />
      </div>
      <div class="grid">
        {semester_courses.map(course => (
          <CourseCard course={course} />
        ))}
      </div>
    </div>
  ))
}

<style>
  .semester-group {
    margin-bottom: 5rem;
    padding-right: 2rem;
  }

  .semester-title {
    display: flex;
    align-items: center;
    margin-bottom: 2.5rem;
  }

  .separator {
    margin-top: 0.25rem;
    flex: 1;
    height: 1px;
    background: linear-gradient(
      to right,
      var(--fg-color) 0%,
      color-mix(in srgb, var(--fg-color) 50%, transparent) 50%,
      color-mix(in srgb, var(--fg-color) 0%, transparent) 100%
    );
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    width: 100%;
  }

  @media (max-width: 1280px) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .semester-group {
      padding-right: 0;
    }
  }

  @media (max-width: 864px) {
    .grid {
      grid-template-columns: 1fr;
    }

    .semester-group {
      padding-right: 0;
    }
  }
</style>
