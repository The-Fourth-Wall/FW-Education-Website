---
import type {Course} from "@models/course.model";
import Badge from "@atoms/buttons/Badge.astro";
import Text from "@atoms/text/Text.astro";

type Props = {course: Course};
const {course} = Astro.props;

const accent = {
  fundamental: "var(--green)",
  beginner: "var(--blue)",
  intermediate: "var(--orange)",
  advanced: "var(--red)",
}[course.difficulty];
---

<div class="card">
  <div class="border_bottom"></div>
  <div class="border_left"></div>
  <div class="header">
    <div data-title>
      <Text
        label={course.name}
        size={1.25}
        type="primary"
        color="var(--white)"
      />
    </div>

    <div class="information">
      <Badge text={course.code} variant={course.difficulty} size={0.875} />
      <Text
        label={`Semester ${course.semester}`}
        size={0.875}
        type="accent"
        color="var(--white)"
      />
    </div>
  </div>

  <div class="description">
    <Text
      label={course.description}
      size={0.875}
      type="secondary"
      color="var(--white)"
    />
  </div>

  <div class="bottom_separator">
    <Text
      label={course.difficulty[0].toUpperCase() + course.difficulty.slice(1)}
      size={0.75}
      type="accent"
      color={accent}
    />
    <div class="time">
      <Text
        label={course.time}
        size={0.75}
        type="secondary"
        color="var(--white)"
      />
    </div>
  </div>
</div>

<style>
  .card {
    --dark-border: rgba(255, 255, 255, 0.1);
    --hover-border: rgba(255, 255, 255, 0.25);
    --dark-shadow: rgba(0, 0, 0, 0.2);
    --animation-time: 50ms;

    border: 1px solid var(--dark-border);
    border-radius: 0.25rem;
    padding: 0.75rem 1rem;
    background: linear-gradient(
      145deg,
      rgba(255, 255, 255, 0.05),
      rgba(255, 255, 255, 0.02)
    );
    box-shadow:
      0 4px 24px -1px var(--dark-shadow),
      0 1px 2px 0 rgba(255, 255, 255, 0.05);
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden;
  }

  .card::before {
    content: "";
    position: absolute;
    top: 0px;
    left: 0px;
    width: 0;
    height: 1px;
    background: var(--hover-border);
    transition: width var(--animation-time) ease-out;
  }

  .card::after {
    content: "";
    position: absolute;
    top: 0px;
    right: 0px;
    width: 1px;
    height: 0;
    background: var(--hover-border);
    transition: height var(--animation-time) ease-out;
  }

  .card .border_bottom {
    position: absolute;
    bottom: 0px;
    right: 0px;
    width: 0;
    height: 1px;
    background: var(--hover-border);
    transition: width var(--animation-time) ease-out;
  }

  .card .border_left {
    position: absolute;
    bottom: 0px;
    left: 0px;
    width: 1px;
    height: 0;
    background: var(--hover-border);
    transition: height var(--animation-time) ease-out;
  }

  .card:hover::before {
    width: calc(100% + 2px);
    transition-delay: 0;
  }

  .card:hover::after {
    height: calc(100% + 2px);
    transition-delay: var(--animation-time);
  }

  .card:hover .border_bottom {
    width: calc(100% + 2px);
    transition-delay: calc(var(--animation-time) * 2);
  }

  .card:hover .border_left {
    height: calc(100% + 2px);
    transition-delay: calc(var(--animation-time) * 3);
  }

  .card:not(:hover)::before {
    width: 0;
    transition-delay: calc(var(--animation-time) * 3);
  }

  .card:not(:hover)::after {
    height: 0;
    transition-delay: calc(var(--animation-time) * 2);
  }

  .card:not(:hover) .border_bottom {
    width: 0;
    transition-delay: var(--animation-time);
  }

  .card:not(:hover) .border_left {
    height: 0;
    transition-delay: 0;
  }

  .card:hover {
    background: linear-gradient(
      145deg,
      rgba(255, 255, 255, 0.07),
      rgba(255, 255, 255, 0.03)
    );
    border: 1px solid transparent;
  }

  .header {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: space-between;
    gap: 0.5rem;
  }

  .information {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    flex-shrink: 0;
    margin: -0.75rem -1rem -0.5rem 0.75rem;
    padding: 0.75rem;
    border-left: 1px solid var(--dark-border);
    border-bottom: 1px solid var(--dark-border);
    border-bottom-left-radius: 0.25rem;
    background: rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
  }

  .information::before {
    content: "";
    position: absolute;
    left: 0;
    top: 1px;
    width: 1px;
    height: 0;
    background: var(--hover-border);
    transition: height var(--animation-time) ease-out;
  }

  .information::after {
    content: "";
    position: absolute;
    left: -1px;
    bottom: 0;
    width: 0;
    height: 1px;
    background: var(--hover-border);
    transition: width var(--animation-time) ease-out;
  }

  .card:hover .information {
    border-left: 1px solid transparent;
    border-bottom: 1px solid transparent;
    transition:
      border-left calc(var(--animation-time) * 5) step-end,
      border-bottom calc(var(--animation-time) * 6) step-end;
  }

  .card:hover .information::before {
    height: 100%;
    transition-delay: calc(var(--animation-time) * 4);
  }

  .card:hover .information::after {
    width: 100%;
    transition-delay: calc(var(--animation-time) * 5);
  }

  .card:not(:hover) .information::before {
    height: 0;
    transition-delay: var(--animation-time);
  }

  .card:not(:hover) .information::after {
    width: 0;
    transition-delay: 0;
  }

  .description {
    margin: 1rem 0 1.5rem;
  }

  .bottom_separator {
    position: relative;
    margin: auto -1rem -0.5rem 0rem;
    padding: 0.25rem 0 0.25rem 0;
    border-top: 1px solid var(--dark-border);
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: linear-gradient(to left, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0));
  }

  .bottom_separator::before {
    content: "";
    position: absolute;
    top: -1px;
    right: 1px;
    width: 0;
    height: 1px;
    background: var(--hover-border);
    transition: width var(--animation-time) ease-out;
    transform-origin: right;
  }

  .card:hover .bottom_separator::before {
    width: 100%;
    transition-delay: calc(var(--animation-time) * 6);
  }

  .card:not(:hover) .bottom_separator::before {
    width: 0;
    transition-delay: calc(var(--animation-time) * 2);
  }

  .card:hover .bottom_separator {
    border-top: 1px solid transparent;
    transition: border-top calc(var(--animation-time) * 7) step-end;
  }

  .time {
    margin-right: 1rem;
  }

  @media (max-width: 464px) {
    .header {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }

    .information {
      flex-direction: row;
      justify-content: flex-start;
      margin: 0;
      padding: 0 0 1.5rem 0;
      border-left: none;
      background: transparent;
      gap: 1rem;
    }

    .information::before {
      display: none;
    }

    .card:hover .information {
      border-left: 0;
    }
  }
</style>
